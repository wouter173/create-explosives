plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	maven { url = "https://maven.blamejared.com/" } // JEI
	maven { url = "https://api.modrinth.com/maven" } // LazyDFU
	maven { url = "https://maven.terraformersmc.com/releases/" } // Mod Menu
	maven { url = 'https://maven.parchmentmc.org' } // Parchment
	maven { url = 'https://maven.tterrag.com/' }  // flywheel
	maven { url = "https://mvn.devos.one/snapshots/" } // create
	maven { url = "https://jitpack.io/" } // mixinextras
	maven { url = "https://cursemaven.com" } // forge-config-api-port-fabric
	maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
}

loom {
    splitEnvironmentSourceSets()

	mods {
		"create-explosives" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

fabricApi {
	configureDataGeneration()
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-${mapping_version}@zip")
		"net.fabricmc:yarn:${project.yarn_mappings}:v2"
	}

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"

	// Development QOL
	modLocalRuntime("maven.modrinth:lazydfu:${project.lazydfu_version}")
	modLocalRuntime("com.terraformersmc:modmenu:${project.modmenu_version}")


	compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:0.3.5"))
	implementation("io.github.llamalad7:mixinextras-forge:0.3.5")

//	modImplementation("com.tterrag.registrate_fabric:Registrate:${registrate_version}")
	modImplementation("com.jozufozu.flywheel:flywheel-fabric-${project.minecraft_version}:${flywheel_version}")
	modImplementation("com.jamieswhiteshirt:reach-entity-attributes:$reach_entity_attributes_version")
	modCompileOnly("com.simibubi.create:create-fabric-${project.minecraft_version}:${create_version}") { transitive = false }
	modRuntimeOnly("com.simibubi.create:create-fabric-${project.minecraft_version}:${create_version}")
	for (String module in port_lib_modules.split(",")) {
		modImplementation("io.github.fabricators_of_create.Porting-Lib:$module:$port_lib_version")
	}

	modImplementation("curse.maven:forge-config-api-port-fabric-547434:$config_api_id")

	modLocalRuntime("mezz.jei:jei-${project.minecraft_version}-fabric:${project.jei_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
